datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

// Prisma schema

// Model for provinces table
model Province {
  id             Int      @id @default(autoincrement())
  code           Int      @unique
  name_in_thai   String
  name_in_english String
  districts      District[] // เพิ่มฟิลด์ districts เพื่อสร้างความสัมพันธ์กับโมเดล District

  @@map("provinces") // Specify the name of the table in the database
}

// Model for districts table
model District {
  id             Int      @id @default(autoincrement())
  code           Int      @unique
  name_in_thai   String
  name_in_english String
  province_id    Int
  province       Province @relation(fields: [province_id], references: [id])
  subdistricts   Subdistrict[] // เพิ่มฟิลด์ subdistricts เพื่อสร้างความสัมพันธ์กับโมเดล Subdistrict

  @@map("districts") // Specify the name of the table in the database
}

// Model for subdistricts table
model Subdistrict {
  id             Int      @id @default(autoincrement())
  code           Int      @unique
  name_in_thai   String
  name_in_english String?
  latitude       Decimal  @db.Decimal(6, 3)
  longitude      Decimal  @db.Decimal(6, 3)
  district_id    Int
  zip_code       Int?

  district       District @relation(fields: [district_id], references: [id])

  @@map("subdistricts") // Specify the name of the table in the database
}

model Employee {
  id          String    @id @default(uuid())
  name        String
  lastname    String
  password    String
  sex         String
  birthday    DateTime
  email       String    @unique
  phone       String
  status      String    @default("Active")
  department  String
  role        String    @default("D")
  images      String    @default("APL.png")
  address     Address?

  @@map("Employee") 
}

model Address {
  homeNumber   String
  province     String
  district     String
  subdistrict  String
  zipCode      Int
  emp_id       String   @unique
  employee     Employee @relation(fields: [emp_id], references: [id])

  @@map("Address") 
}
